{"version":3,"sources":["../../src/controllers/foods_controller.js"],"names":["FoodsController","request","response","Food","getAllFoods","foods","status","json","food_id","params","id","getSingleFood","food","new_food_data","body","createFood","result","data","updated_food_data","updateFood","destroyFood"],"mappings":";;;;;;;;AAAA;;;;;;;;;;IAEMA,e;;;;;;;;0FACeC,O,EAASC,Q;;;;;;;uBACRC,eAAKC,WAAL,E;;;AAAdC,qB;;AACJH,yBAASI,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BF,KAA1B;;;;;;;;;;;;;;;;;;;4FAGgBJ,O,EAASC,Q;;;;;;AACrBM,uB,GAAUP,QAAQQ,MAAR,CAAeC,E;;uBACZP,eAAKQ,aAAL,CAAmBH,OAAnB,C;;;AAAbI,oB;;AACJV,yBAASI,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0BK,IAA1B;;;;;;;;;;;;;;;;;;;4FAGkBX,O,EAASC,Q;;;;;;AACvBW,6B,GAAgBZ,QAAQa,IAAR,CAAaF,I;;uBACdT,eAAKY,UAAL,CAAgBF,aAAhB,C;;;AAAfG,sB;;AACJd,yBAASI,MAAT,CAAgBU,OAAOV,MAAvB,EAA+BC,IAA/B,CAAoCS,OAAOC,IAA3C;;;;;;;;;;;;;;;;;;;4FAGkBhB,O,EAASC,Q;;;;;;AACvBgB,iC,GAAoBjB,QAAQa,IAAR,CAAaF,I;;uBAClBT,eAAKgB,UAAL,CAAgBD,iBAAhB,EAAmCjB,QAAQQ,MAAR,CAAeC,EAAlD,C;;;AAAfM,sB;;AACJd,yBAASI,MAAT,CAAgBU,OAAOV,MAAvB,EAA+BC,IAA/B,CAAoCS,OAAOC,IAA3C;;;;;;;;;;;;;;;;;;;4FAGmBhB,O,EAASC,Q;;;;;;;uBACTC,eAAKiB,WAAL,CAAiBnB,QAAQQ,MAAR,CAAeC,EAAhC,C;;;AAAfM,sB;;AACJd,yBAASI,MAAT,CAAgBU,OAAOV,MAAvB,EAA+BC,IAA/B,CAAoCS,OAAOC,IAA3C;;;;;;;;;;;;;;;;;;;;;kBAIWjB,e","file":"foods_controller.js","sourcesContent":["import Food from '../models/Food';\n\nclass FoodsController {\n  static async index(request, response) {\n    let foods = await Food.getAllFoods();\n    response.status(200).json(foods);\n  }\n\n  static async show(request, response) {\n    let food_id = request.params.id;\n    let food = await Food.getSingleFood(food_id);\n    response.status(200).json(food);\n  }\n\n  static async create(request, response) {\n    let new_food_data = request.body.food;\n    let result = await Food.createFood(new_food_data); \n    response.status(result.status).json(result.data);\n  }\n\n  static async update(request, response) {\n    let updated_food_data = request.body.food;\n    let result = await Food.updateFood(updated_food_data, request.params.id);\n    response.status(result.status).json(result.data);\n  }\n\n  static async destroy(request, response) {\n    let result = await Food.destroyFood(request.params.id);\n    response.status(result.status).json(result.data);\n  }\n}\n\nexport default FoodsController;\n"]}