{"version":3,"sources":["../../src/models/Food.js"],"names":["environment","process","env","NODE_ENV","configuration","require","database","Food","request","response","select","food_id","raw","food","rows"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,cAAcC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,aAA5C;AACA,IAAMC,gBAAgBC,QAAQ,gBAAR,EAA0BL,WAA1B,CAAtB;AACA,IAAMM,WAAWD,QAAQ,MAAR,EAAgBD,aAAhB,CAAjB;;IAEMG,I;;;;;;;;0FACqBC,O,EAASC,Q;;;;;;uBACnBH,SAAS,OAAT,EAAkBI,MAAlB,E;;;;;;;;;;;;;;;;;;;;;;4FAGYC,O;;;;;;;;uBAENL,SAASM,GAAT,qFACiC,CAACD,OAAD,CADjC,C;;;AAAbE,oB;kDAEGA,KAAKC,IAAL,CAAU,CAAV,C;;;;;;;;;;;;;;;;;;;;;;;;;;kBAOEP,I","file":"Food.js","sourcesContent":["const environment = process.env.NODE_ENV || 'development';\nconst configuration = require('../../knexfile')[environment];\nconst database = require('knex')(configuration);\n\nclass Food  {\n  static async getAllFoods(request, response) {\n    return await database('foods').select();\n  }\n\n  static async getSingleFood(food_id) {\n    try {\n      let food = await database.raw(`SELECT foods.* FROM foods\n                                     WHERE foods.id=?`, [food_id]);\n      return food.rows[0];\n    } catch(error) {\n      return error;\n    }\n  }\n}\n\nexport default Food;\n"]}