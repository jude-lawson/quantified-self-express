{"version":3,"sources":["../src/app.js"],"names":["app","environment","process","env","NODE_ENV","configuration","require","database","use","bodyParser","json","urlencoded","extended","set","PORT","locals","title","get","request","response","send","FoodsController","index","show","post","create","patch","update","delete","destroy","MealsController","listen","console","log","module","exports"],"mappings":";;AAAA;;AACA;;;;AAEA;;;;AAMA;;;;AACA;;;;;;AARA,IAAMA,MAAM,wBAAZ;;;AAGA,IAAMC,cAAcC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,aAA5C;AACA,IAAMC,gBAAgBC,QAAQ,aAAR,EAAuBL,WAAvB,CAAtB;AACA,IAAMM,WAAWD,QAAQ,MAAR,EAAgBD,aAAhB,CAAjB;;AAKAL,IAAIQ,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAV,IAAIQ,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAZ,IAAIa,GAAJ,CAAQ,MAAR,EAAgBX,QAAQC,GAAR,CAAYW,IAAZ,IAAoB,IAApC;AACAd,IAAIe,MAAJ,CAAWC,KAAX,GAAmB,6BAAnB;;AAEA;;AAEA;AACAhB,IAAIiB,GAAJ,CAAQ,GAAR,EAAa,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAAEA,WAASC,IAAT,CAAc,6BAAd;AAA+C,CAArF;;AAEA;AACApB,IAAIiB,GAAJ,CAAQ,eAAR,EAAyB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAAEE,6BAAgBC,KAAhB,CAAsBJ,OAAtB,EAA+BC,QAA/B;AAA0C,CAA5F;AACAnB,IAAIiB,GAAJ,CAAQ,mBAAR,EAA6B,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAAEE,6BAAgBE,IAAhB,CAAqBL,OAArB,EAA8BC,QAA9B;AAAyC,CAA/F;AACAnB,IAAIwB,IAAJ,CAAS,eAAT,EAA0B,UAACN,OAAD,EAAUC,QAAV,EAAuB;AAAEE,6BAAgBI,MAAhB,CAAuBP,OAAvB,EAAgCC,QAAhC;AAA2C,CAA9F;AACAnB,IAAI0B,KAAJ,CAAU,mBAAV,EAA+B,UAACR,OAAD,EAAUC,QAAV,EAAuB;AAAEE,6BAAgBM,MAAhB,CAAuBT,OAAvB,EAAgCC,QAAhC;AAA2C,CAAnG;AACAnB,IAAI4B,MAAJ,CAAW,mBAAX,EAAgC,UAACV,OAAD,EAAUC,QAAV,EAAuB;AAAEE,6BAAgBQ,OAAhB,CAAwBX,OAAxB,EAAiCC,QAAjC;AAA4C,CAArG;;AAEA;AACAnB,IAAIiB,GAAJ,CAAQ,eAAR,EAAyB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAAEW,6BAAgBR,KAAhB,CAAsBJ,OAAtB,EAA+BC,QAA/B;AAA2C,CAA7F;;AAGA;;AAEAnB,IAAI+B,MAAJ,CAAW/B,IAAIiB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAChCe,UAAQC,GAAR,CAAY,oBAAZ;AACAD,UAAQC,GAAR,CAAejC,IAAIe,MAAJ,CAAWC,KAA1B,gCAA0DhB,IAAIiB,GAAJ,CAAQ,MAAR,CAA1D,gBAAoFhB,WAApF;AACD,CAHD;;AAKAiC,OAAOC,OAAP,GAAiBnC,GAAjB","file":"app.js","sourcesContent":["import 'babel-polyfill';\nimport express from 'express';\nconst app = express();\nimport bodyParser from 'body-parser';\n\nconst environment = process.env.NODE_ENV || 'development';\nconst configuration = require('../knexfile')[environment];\nconst database = require('knex')(configuration);\n\nimport FoodsController from './controllers/foods_controller';\nimport MealsController from './controllers/meals_controller';\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.set('port', process.env.PORT || 8000);\napp.locals.title = 'Quantified Self Express API';\n\n/* Routes */\n\n// Root\napp.get('/', (request, response) => { response.send('Quantified Self Express API'); });\n\n// Foods\napp.get('/api/v1/foods', (request, response) => { FoodsController.index(request, response) });\napp.get('/api/v1/foods/:id', (request, response) => { FoodsController.show(request, response) });\napp.post('/api/v1/foods', (request, response) => { FoodsController.create(request, response) });\napp.patch('/api/v1/foods/:id', (request, response) => { FoodsController.update(request, response) });\napp.delete('/api/v1/foods/:id', (request, response) => { FoodsController.destroy(request, response) });\n\n// Meals\napp.get('/api/v1/meals', (request, response) => { MealsController.index(request, response); });\n\n\n/* Open server */\n\napp.listen(app.get('port'), () => {\n  console.log('Starting server...')\n  console.log(`${app.locals.title} is now running on port ${app.get('port')} in the ${environment} environment.`);\n});\n\nmodule.exports = app;\n\n"]}